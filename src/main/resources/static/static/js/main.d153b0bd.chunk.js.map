{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","components/Layout/Header.js","actions/securityActions.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoutes.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","propType","PropTypes","object","isRequired","func","state","get","res","setJWTToken","token","defaults","headers","common","Header","logout","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","localStorage","removeItem","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","console","log","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","roler","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d153b0bd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it.\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propType = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\"> {\" \" + user.fullName}</i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post  => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in the header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n    // console.log(newProject);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        {/* \n        //check name attribute input fields\n        //create constructor\n        //set state\n        //set value on input fields\n        //create onChange function\n        //set onChange on each input field\n        //bind on constructor\n        //check state change in the react extension\n        */}\n\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROJECTS,\n  GET_ERRORS,\n  GET_PROJECT,\n  DELETE_PROJECT,\n} from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\nimport { act } from \"react-dom/test-utils\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  // set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.id,\n      end_date: this.state.id,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n\n    console.log(res);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n\n    history.push(`/projectBoard/${backlog_id}`);\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    console.log(\"test\");\n    for (let i = 0; i < tasks.length; i++) {\n      //console.log(tasks[i]);\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  // constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" roler=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"0\",\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  // onChange\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  // onSubmit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n    console.log(newTask);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    //console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | + Project Task\n                ID: {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feeback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feed\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\nimport { connect } from \"react-redux\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute, { securedRoute } from \"./securityUtils/SecureRoutes\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //console.log(\"test\" + decoded_jwtToken);\n    // store.dispatch(logout());\n    // window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {/* \n            Public Routes\n          */}\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {/* \n            Private Routes\n          */}\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id/\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}